/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;
import jpcap.packet.TCPPacket;
import jpcap.PacketReceiver;
import jpcap.packet.Packet;
import jpcap.*;
import jpcap.packet.EthernetPacket;
import java.io.Serializable;
import java.net.DatagramPacket;
import jpcap.packet.UDPPacket;
import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.bind.DatatypeConverter;
/**
 *
 * @author ramy
 */


public class sniffer extends javax.swing.JFrame {
    
    String x;
Packet packet;
    /**
     * Creates new form sniffer
     */
    public sniffer() {
        initComponents();
    }
    public static NetworkInterface[] NETWORK_INTERFACES;
    JpcapWriter writer;
    public static JpcapCaptor CAP;
    jpcap_thread THREAD;
    public static int INDEX = 0;
    public static int flag = 0;
    public static int COUNTER = 0;
    boolean CaptureState = false;
    
    public static String toHexadecimal(String text) throws UnsupportedEncodingException {
        byte[] myBytes = text.getBytes("UTF-8");

        return DatatypeConverter.printHexBinary(myBytes);
    }
    
    public static String customizeHexa(String text){
    
    String out;
    out= text.replaceAll("(.{32})", "$1\n");
    return out.replaceAll("..(?!$)", "$0 ");
    }
    
    
    
   public void CapturePackets(){
    
    
    THREAD = new jpcap_thread() {
        
        public Object construct(){
        
        try{
        
            CAP = JpcapCaptor.openDevice(NETWORK_INTERFACES[INDEX], 65535, false, 20);
             if("udp".equals(textArea1.getText()) ||textArea1.getText()=="UDP"||textArea1.getText()=="Udp" )
        {
            CAP.setFilter("udp", true);
        }
        else if("tcp".equals(textArea1.getText()) ||textArea1.getText()=="TCP"||textArea1.getText()=="Tcp" )
        {   
            CAP.setFilter("tcp", true);
        }
        else
        {}
            while(CaptureState){
            
                CAP.processPacket(1, new PacketContents());
            
            }
        CAP.close();
        
        }
        catch(Exception e){
        System.out.print(e);
        }
        return 0;
        }
        
        public void finished(){
        this.interrupt();
        }
    };
    
    THREAD.start();
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        captureButton = new java.awt.Button();
        stopButton = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        textArea1 = new java.awt.TextArea();
        listButton = new java.awt.Button();
        saveButton = new java.awt.Button();
        loadButton = new java.awt.Button();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();

        jMenu2.setText("File");
        jMenuBar2.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("jMenu4");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        captureButton.setLabel("Capture");
        captureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                captureButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(captureButton);

        stopButton.setLabel("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(stopButton);

        jLabel1.setText("Filter");
        jToolBar1.add(jLabel1);
        jToolBar1.add(textArea1);

        listButton.setLabel("List Devices");
        listButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(listButton);

        saveButton.setLabel("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(saveButton);

        loadButton.setLabel("Load");
        jToolBar1.add(loadButton);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Length", "Source", "Destination", "Protocol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(20);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
       /* int index=jTable1.getSelectedRow();
        TableModel model= jTable1.getModel();
        System.out.println("row "+index+" clicked");*/
      /* int index=jTable1.getSelectedRow();
       jTextArea1.setText("AckNo.="+PacketContents.tcp[index].getAcknowledgementNumber());*/ 
//TableModel model= jTable1.getModel();
/*TCPPacket tcp;
      Object obj = jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0);
     // jTextArea1.setText("no");
//packet= PacketContents.pkt[(int)obj];
packet= PacketContents.pkt[0];
    System.out.println("hi2");
    //
if(packet instanceof TCPPacket)
{
    System.out.println("hi");
     tcp=(TCPPacket) packet;
    jTextArea1.setText("src_ip="+tcp.src_ip+"   dst_ip="+tcp.dst_ip+"\n");
}
else if(PacketContents.pkt[(int)obj] instanceof UDPPacket)
{
    System.out.println("hi");
    UDPPacket udp=(UDPPacket) packet;
    jTextArea1.setText("src_ip="+udp.src_ip+"   dst_ip="+udp.dst_ip+"\n");
}*/


Object obj = jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0);
if(PacketContents.rowList.get((int)obj)[4]=="tcp")
{    jTextArea1.setText("Packet No:"+PacketContents.rowList.get((int)obj)[0]
    +"Seq No:"+PacketContents.rowList.get((int)obj)[10]
    +"\nProtocol:"+PacketContents.rowList.get((int)obj)[4]
    +"\nSource IP: "+PacketContents.rowList.get((int)obj)[2]
    +"\nDist IP:"+PacketContents.rowList.get((int)obj)[3]
    +"\nLength:"+PacketContents.rowList.get((int)obj)[1]
    +"\nSource Port:"+PacketContents.rowList.get((int)obj)[5]
    +"\nDist Port:"+PacketContents.rowList.get((int)obj)[6]
    +"\nAck:"+PacketContents.rowList.get((int)obj)[7]
    +"\nAck No:"+PacketContents.rowList.get((int)obj)[8]
    +"\nData:"+PacketContents.rowList.get((int)obj)[9]
    
);

    try {
        jTextArea2.setText(customizeHexa(toHexadecimal(jTextArea1.getText())));
    } catch (UnsupportedEncodingException ex) {
        Logger.getLogger(sniffer.class.getName()).log(Level.SEVERE, null, ex);
    }

}
else if(PacketContents.rowList.get((int)obj)[4]=="udp")
{    jTextArea1.setText("Packet No:"+PacketContents.rowList.get((int)obj)[0]
    +"\nProtocol:"+PacketContents.rowList.get((int)obj)[4]
    +"\nSource IP: "+PacketContents.rowList.get((int)obj)[2]
    +"\nDist IP:"+PacketContents.rowList.get((int)obj)[3]
    +"\nLength:"+PacketContents.rowList.get((int)obj)[1]
    +"\nSource Port:"+PacketContents.rowList.get((int)obj)[5]
    +"\nDist Port:"+PacketContents.rowList.get((int)obj)[6]
    +"\nData:"+PacketContents.rowList.get((int)obj)[7]
        /*+"\nAck:"+PacketContents.rowList.get((int)obj)[7]
    +"\nAck No:"+PacketContents.rowList.get((int)obj)[8]*/
);

 try {
        jTextArea2.setText(customizeHexa(toHexadecimal(jTextArea1.getText())));
    } catch (UnsupportedEncodingException ex) {
        Logger.getLogger(sniffer.class.getName()).log(Level.SEVERE, null, ex);
    }


} 
     
    
    
    
    


    }//GEN-LAST:event_jTable1MouseClicked

    private void captureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_captureButtonActionPerformed
        // TODO add your handling code here:
//outputText.setText("");
        CaptureState = true;
        CapturePackets();
    }//GEN-LAST:event_captureButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
        CaptureState = false;
        THREAD.finished();
    }//GEN-LAST:event_stopButtonActionPerformed

    private void listButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listButtonActionPerformed
        // TODO add your handling code here:
        NewWindow nw=new NewWindow();
    }//GEN-LAST:event_listButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        /*try {     
            System.out.println("hi");
            writer=JpcapWriter.openDumpFile(CAP,"CAP");
            System.out.println("hi2");
            Object obj = jTable1.getModel().getValueAt(jTable1.getSelectedRow(),0);
            System.out.println("hi3");
            writer.writePacket(PacketContents.pkt[(int)obj]);
            System.out.println("hi4");
            writer.close();
        } catch (IOException ex) {
            Logger.getLogger(sniffer.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sniffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sniffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sniffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sniffer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sniffer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button captureButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JToolBar jToolBar1;
    private java.awt.Button listButton;
    private java.awt.Button loadButton;
    private java.awt.Button saveButton;
    private java.awt.Button stopButton;
    private java.awt.TextArea textArea1;
    // End of variables declaration//GEN-END:variables
}
